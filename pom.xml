<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>elovendo</groupId>
	<artifactId>elovendo</artifactId>
	<packaging>war</packaging>
	<version>1.1.0.1</version>
	<name>elovendo</name>
	<url>http://maven.apache.org</url>

	<!--<parent> -->
	<!--<groupId>org.springframework.boot</groupId> -->
	<!--<artifactId>spring-boot-starter-parent</artifactId> -->
	<!--<version>1.0.0.RC1</version> -->
	<!--</parent> -->

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.1.9.RELEASE</version>
<!-- 		<version>1.2.0.BUILD-SNAPSHOT</version> -->
	</parent>

	<properties>
		<!-- Data source properties -->
		<dataSource.user>admin</dataSource.user>
		<dataSource.password>admin</dataSource.password>
<!-- 		<dataSource.jndiName>jdbc/pojo-examples-ds</dataSource.jndiName> -->
		<testDataSource.user>${dataSource.user}</testDataSource.user>
		<testDataSource.password>${dataSource.password}</testDataSource.password>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<spring.version>4.1.2.RELEASE</spring.version>
		<spring.data.commons.version>1.9.0.RELEASE</spring.data.commons.version>
		<spring.data.version>1.6.4.RELEASE</spring.data.version>

		<java-version>1.7</java-version>

		<org.aspectj-version>1.6.10</org.aspectj-version>
		<thymeleaf.version>2.1.3.RELEASE</thymeleaf.version>
		
		<!-- Java -->
		<servlet-version>3.1.0</servlet-version>
		<jsp-version>2.2.1</jsp-version>
		<jstl-version>1.2</jstl-version>
		
		<!-- start class -->
<!-- 		<start-class>es.elovendo.ElovendoMain</start-class> -->

	</properties>

	<!-- ========================================================== -->
	<!-- Profiles -->
	<!-- ========================================================== -->
	<profiles>
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- JDBC driver properties -->
				<jdbcDriver.groupId>mysql</jdbcDriver.groupId>
				<jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
				<jdbcDriver.version>5.1.21</jdbcDriver.version>
				<jdbcDriver.className>com.mysql.jdbc.Driver</jdbcDriver.className>

				<!-- Data source properties -->
				<dataSource.url>jdbc:mysql://localhost/elovendo</dataSource.url>
				<testDataSource.url>${dataSource.url}test</testDataSource.url>
				<dataSource.createDataScript>create-database.sql</dataSource.createDataScript>
				<dataSource.createTablesScript>create-schema.sql</dataSource.createTablesScript>

				<!-- Hibernate properties -->
				<hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>

				<!--Spring security -->
				<!--<springsecurity.version>3.0.5.RELEASE</springsecurity.version> -->
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>org.springframework.boot</groupId> -->
<!-- 					<artifactId>spring-boot-starter-logging</artifactId> -->
<!-- 				</exclusion> -->
<!-- 			</exclusions> -->
		</dependency>
		
		<!-- Provide the embedded container -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-tomcat</artifactId>
		    <scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
			<version>0.8.0.RELEASE</version>
		</dependency>
		<!-- Spring MVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<!--<scope>compile</scope> -->
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Spring context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- RestTemplate -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Web MVC -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-webmvc</artifactId>
		</dependency>
		<!-- Spring data -->
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-commons</artifactId>
		    <version>${spring.data.commons.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.version}</version>
		</dependency>
		<!-- Spring mobile -->
		<dependency>
			<groupId>org.springframework.mobile</groupId>
			<artifactId>spring-mobile-device</artifactId>
		</dependency>
		<!-- Apache dbcp -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<!-- Apache HttpClient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.5</version>
		</dependency>
		<!-- Hibernate entity manager -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<!-- Mysql Driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
		
		<!-- HTML SANITIZIER -->
		<dependency>
	        <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
	        <artifactId>owasp-java-html-sanitizer</artifactId>
	        <version>r239</version>
    	</dependency>
    	
		<!--  Imgscalr -->
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
		
		<!-- Phone validation -->
		<dependency>
			<groupId>com.googlecode.libphonenumber</groupId>
			<artifactId>libphonenumber</artifactId>
			<version>6.3.1</version>
		</dependency>

		<!--SECURITY -->
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<!-- Sitemap generator -->
		<dependency>
			<groupId>com.google.code</groupId>
			<artifactId>sitemapgen4j</artifactId>
			<version>1.0.1</version>
		</dependency>
		<!-- Spring BATCH -->
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
			<version>3.0.2.RELEASE</version>
		</dependency>

		<!-- Servlet API and JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>${jsp-version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl-version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<!--File upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version> <!-- makesure correct version here -->
		</dependency>
		
		<!-- Java mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.5.2</version>
		</dependency>
		
		<!-- Apache commons validator -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
			<version>2.0.8</version>
		</dependency>

		<!--SOCIAL -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-config</artifactId>
			<version>1.1.0.RELEASE</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-core</artifactId>
			<version>1.1.0.RELEASE</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-security</artifactId>
			<version>1.1.0.RELEASE</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-web</artifactId>
			<version>1.1.0.RELEASE</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
	
		<!-- Spring Social Facebook -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-facebook</artifactId>
			<version>1.1.1.RELEASE</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<!-- Spring Social Twitter -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-twitter</artifactId>
			<version>1.1.0.RELEASE</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- Spring Social Google -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-google</artifactId>
			<version>1.0.0.RELEASE</version>
		</dependency>

		<!-- THYEMLEAF -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>${thymeleaf.version}</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity3</artifactId>
			<version>2.1.1.RELEASE</version>
		</dependency>
		<!-- For legacyhtml5 -->
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>1.9.21</version>
		</dependency>
		<dependency>
		    <groupId>xml-apis</groupId>
		    <artifactId>xml-apis</artifactId>
		    <version>1.4.01</version>
		</dependency>

		<!-- TEST DEPENDENCIES -->
		<!-- Ver http://www.petrikainulainen.net/programming/spring-framework/spring-data-jpa-tutorial-integration-testing/ -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.9</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp</artifactId>
			<version>0.8.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.10.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-remote-shell</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>
				spring-boot-starter-data-elasticsearch
			</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>

			<!-- Apply filtering to files matching the following expressions in src/main/resources. -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
<!-- 				<includes> -->
<!-- 					<include>spring-config.xml</include> -->
<!-- 				</includes> -->
			</resource>

			<!-- Continue considering resources the files in src/main/resources, but 
				without applying filtering. -->
			<resource>
				<directory>src/main/resources</directory>
			</resource>

		</resources>

		<testResources>
			<!-- Apply filtering to files matching the following expressions in src/test/resources. -->
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
<!-- 				<includes> -->
<!-- 					<include>spring-config-test.xml</include> -->
<!-- 					<include>hibernate-config-experiments.xml</include> -->
<!-- 				</includes> -->
			</testResource>

			<!-- Continue considering resources the files in src/test/resources, but 
				without applying filtering. -->
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>springloaded</artifactId>
						<version>1.2.0.RELEASE</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- ========================================================== -->
			<!-- Setting SQL Plugin -->
			<!-- - Configuartion specifies onError="continue" since SQL scripts try 
				to drop tables before creating them (which causes errors if such tables do 
				not exist yet). - Configuartion specifies autocommit="true" since some drivers 
				(e.g the PostgreSQL JDBC 2 driver) do not commit changes if some error ocurrs. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>${jdbcDriver.groupId}</groupId>
						<artifactId>${jdbcDriver.artifactId}</artifactId>
						<version>${jdbcDriver.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>${jdbcDriver.className}</driver>
					<url>${dataSource.url}</url>
					<username>${dataSource.user}</username>
					<password>${dataSource.password}</password>
					<autocommit>true</autocommit>
					<onError>continue</onError>
					<orderFile>descending</orderFile>
					<fileset>
						<basedir>${basedir}</basedir>
						<includes>
							<include>src/sql/${dataSource.createTablesScript}</include>
							<include>src/sql/${dataSource.createDataScript}</include>
						</includes>
					</fileset>
				</configuration>
				<executions>
					<execution>
						<id>create-tables-for-testing</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<driver>${jdbcDriver.className}</driver>
							<url>${testDataSource.url}</url>
							<username>${testDataSource.user}</username>
							<password>${testDataSource.password}</password>
							<autocommit>true</autocommit>
							<onError>continue</onError>
							<fileset>
								<basedir>${basedir}</basedir>
								<includes>
									<include>src/sql/${dataSource.createTablesScript}</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>http://repo.spring.io/libs-release</url>
		</repository>

<!-- 		<repository> -->
<!-- 			<id>spring-snapshots</id> -->
<!-- 			<name>Spring Snapshots</name> -->
<!-- 			<url>http://repo.spring.io/snapshot</url> -->
<!-- 			<snapshots> -->
<!-- 				<enabled>true</enabled> -->
<!-- 			</snapshots> -->
<!-- 		</repository> -->

<!-- 		<repository> -->
<!-- 			<id>spring.social.google</id> -->
<!-- 			<name>Spring Social Google</name> -->
<!-- 			<url>https://github.com/GabiAxel/maven/raw/master/</url> -->
<!-- 		</repository> -->
		
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>http://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>
</project>
